#
#   This is the core configuration for a configuration service.  I have two examples here:
#
#       -  A configuration service which completelty loads the configuration for the services
#          from the local file server of the config service.  This should only be used for
#          demonstration purposes or for a small application with a limited number of services.
#
#       -  A configuraton service that uses a git-based repository to read the files from
#


####################################
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER_URL:http://eureka:password@localhost:8761/eureka/}

server:
  port: ${PORT:8888}
spring:
  cloud:
    config:
      discovery:
        enabled: true
      server:
        git:
          uri: ${GIT_CONFIG_URL:https://github.com/lynx-r/tictactoe-config-repo.git}
#          username: ${GITHUB_USERNAME}
#          password: ${GITHUB_PASSWORD}


####
#Classpath and file-based solution
####

#server:
#   port: 8888
#spring:
#  profiles:
#    active: native
#  cloud:
#     config:
#       server:
#           native:
#              searchLocations: file://<chapter 3>/confsvr/src/main/resources/config/licensingservice,
#                               file://<chapter 3>confsvr/src/main/resources/config/organizationservice
###              #searchLocations: classpath:config/,classpath:config/licensingservice